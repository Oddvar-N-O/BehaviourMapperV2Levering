{"version":3,"sources":["components/Icon.js","components/AllIcons.js","pages/BehaviourMapping.js","pages/newProject.js","pages/login.js","pages/startpage.js","pages/ChooseImage.js","components/sidebarLP.js","pages/loadProject.js","App.js","index.js"],"names":["Icon","props","useState","icon","setIcon","useEffect","fetch","description","color","then","result","blob","images","image","URL","createObjectURL","id","className","alt","src","AllIcons","state","allIconData","redData","blueData","greenData","response","json","data","setState","i","length","push","this","handleChange","bind","event","target","value","redIcons","map","onClick","selectIcon","blueIcons","greenIcons","React","Component","BehaviourMapping","background","icons","ourSRC","sendNewIconToBD","newIconID","actionID","ourIconID","ourIconCoord","x","y","degree","ourMouseCoord","p_id","location","projdata","mapblob","addIconToList","FormData","coordinates","undefined","append","Date","method","body","clientX","clientY","hideIcon","addIcon","str","descr","split","charAt","toUpperCase","slice","console","error","e","list","document","getElementById","li","createElement","newSrc","setAttribute","newText","setInnerHTML","getAttribute","foundObject","objectExists","alreadyExists","alreadyInList","innerHTML","addEventListener","appendChild","imgIcon","closeIconSelect","alert","log","ele","getElementsByTagName","placeIcon","startPointing","pointIcon","img","classList","add","toString","style","top","left","degrees","Math","atan2","PI","string_degree","round","transform","sendDatabaseEvent","display","stopPointing","res","newIcon","showAll","hideAll","onMouseMove","updateCoord","takeAction","NewProject","projectName","projectNameLegend","projectImageLegend","redirect","fromLoadMap","liColor","handleUploadImage","setRedirect","imageChosen","redirectToMapping","name","changeColor","uploadInput","files","setTimeout","history","pathname","preventDefault","handleRedirect","to","fromLoadMpap","type","onChange","placeholder","ref","backgroundColor","Login","setPlaceholder","Startpage","new_project","setNewProject","hideNewProject","load_project","setLoadProject","ChooseImage","Map","layers","TileLayer","source","OSM","view","View","center","zoom","controls","Zoom","exportImg","pauseBeforeRedirect","mapCanvas","size","getSize","width","height","mapContext","getContext","Array","prototype","forEach","call","querySelectorAll","canvas","opacity","parentNode","globalAlpha","Number","matrix","match","CanvasRenderingContext2D","setTransform","apply","drawImage","toDataURL","lastModifiedDate","file","File","lastModified","getTime","setTarget","on","getView","getCenter","getZoom","sidebar","listElements","projects","getCurrProj","LoadProject","allProjects","setAllProjects","allEvents","setallEvents","currProj","setCurrProj","showProjInfo","setshowProjInfo","fetchstring","index","project","events","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"mTAsBeA,MApBf,SAAcC,GAAQ,IAAD,EAEOC,mBAAS,IAFhB,mBAEVC,EAFU,KAEJC,EAFI,KAcjB,OAVAC,qBAAU,WACNC,MAAM,yBAAD,OAA0BL,EAAMM,YAAhC,kBAAqDN,EAAMO,QAC/DC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GACF,IAAIC,EAAQC,IAAIC,gBAAgBH,GAChCR,EAAQS,QAGhB,CAACZ,EAAMM,YAAaN,EAAMO,QAGtB,mCACI,qBAAKQ,GAAIf,EAAMM,YAAc,IAAMN,EAAMO,MAAOS,UAAU,cAAcC,IAAI,OAAOC,IAAKhB,OCgGrFiB,G,wDA7GX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTb,MAAO,OACPL,KAAM,GACNmB,YAAa,GACbC,QAAS,GACTC,SAAU,GACVC,UAAW,IARL,E,gEAaO,IAAD,OAChBnB,MAAM,iBACLG,MAAK,SAAAiB,GAAQ,OAAIA,EAASC,UAC1BlB,MAAK,SAAAmB,GACF,EAAKC,SAAS,CACVP,YAAaM,IAEjB,IAAK,IAAIE,EAAE,EAAGA,EAAE,EAAKT,MAAMC,YAAYS,OAAQD,IACH,QAApC,EAAKT,MAAMC,YAAYQ,GAAGtB,MAC1B,EAAKa,MAAME,QAAQS,KAAK,EAAKX,MAAMC,YAAYQ,IACJ,SAApC,EAAKT,MAAMC,YAAYQ,GAAGtB,MACjC,EAAKa,MAAMG,SAASQ,KAAK,EAAKX,MAAMC,YAAYQ,IAEhD,EAAKT,MAAMI,UAAUO,KAAK,EAAKX,MAAMC,YAAYQ,OAI7DG,KAAKC,aAAeD,KAAKC,aAAaC,KAAKF,Q,mCAGlCG,GACTH,KAAKJ,SAAS,CACVrB,MAAO4B,EAAMC,OAAOC,U,+BAIjB,IAAD,OACAC,EAAWN,KAAKZ,MAAME,QAAQiB,KAAI,SAAAZ,GAAI,OAExC,sBAAmBX,UAAU,cAA7B,UACI,qBAAKA,UAAU,cAAcwB,QAAS,EAAKxC,MAAMyC,WAAjD,SACI,cAAC,EAAD,CACAnC,YAAaqB,EAAKrB,YAClBC,MAAOoB,EAAKpB,UAEZ,qBAAKS,UAAU,mBAAf,SAAmCW,EAAKrB,gBANtCqB,EAAKZ,OAUb2B,EAAYV,KAAKZ,MAAMG,SAASgB,KAAI,SAAAZ,GAAI,OAC1C,sBAAmBX,UAAU,cAA7B,UACI,qBAAKA,UAAU,cAAcwB,QAAS,EAAKxC,MAAMyC,WAAjD,SACI,cAAC,EAAD,CACAnC,YAAaqB,EAAKrB,YAClBC,MAAOoB,EAAKpB,UAEZ,qBAAKS,UAAU,mBAAf,SAAmCW,EAAKrB,gBANtCqB,EAAKZ,OAUb4B,EAAaX,KAAKZ,MAAMI,UAAUe,KAAI,SAAAZ,GAAI,OAC5C,sBAAmBX,UAAU,cAA7B,UACI,qBAAKA,UAAU,cAAcwB,QAAS,EAAKxC,MAAMyC,WAAjD,SACI,cAAC,EAAD,CACAnC,YAAaqB,EAAKrB,YAClBC,MAAOoB,EAAKpB,UAEZ,qBAAKS,UAAU,mBAAf,SAAmCW,EAAKrB,gBANtCqB,EAAKZ,OAUnB,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAIA,UAAU,gBAAd,UACI,oBAAIwB,QAAS,WACT,EAAKZ,SAAS,CAACrB,MAAO,UACtBS,UAAiC,SAArBgB,KAAKZ,MAAMb,MAAmB,WAAa,eAF3D,iBAIA,oBAAIiC,QAAS,WACT,EAAKZ,SAAS,CAACrB,MAAO,SACtBS,UAAiC,QAArBgB,KAAKZ,MAAMb,MAAkB,WAAa,eAF1D,mBAIA,oBAAIiC,QAAS,WACT,EAAKZ,SAAS,CAACrB,MAAO,WACtBS,UAAiC,UAArBgB,KAAKZ,MAAMb,MAAoB,WAAa,eAF5D,sBAMJ,qBAAKS,UAA8B,QAAnBgB,KAAKZ,MAAMb,MAAgB,gBAAkB,kBAA7D,SACK+B,IAGL,qBAAKtB,UAA8B,SAAnBgB,KAAKZ,MAAMb,MAAiB,gBAAkB,kBAA9D,SACKmC,IAGL,qBAAK1B,UAA8B,UAAnBgB,KAAKZ,MAAMb,MAAkB,gBAAkB,kBAA/D,SACKoC,W,GArGEC,IAAMC,YC6RdC,G,wDA5Rb,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IAGDoB,MAAQ,CACX2B,WAAY,yEACZC,MAAO,GAEPC,OAAQ,KACRC,iBAAiB,EACjBC,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,aAAc,CAACC,EAAG,EAAGC,EAAG,EAAGC,OAAQ,GACnCC,cAAe,CAACH,EAAG,EAAGC,EAAG,GAEzBG,KAAM3D,EAAM4D,SAASxC,MAAMuC,KAC3BE,SAAU,GACVC,QAAS,IAEX,EAAKrB,WAAa,EAAKsB,cAAc7B,KAAnB,gBApBH,E,gEAyBjB,IAAMP,EAAO,IAAIqC,SACXC,EAAc,CAACjC,KAAKZ,MAAMkC,aAAaC,EAAE,GAAIvB,KAAKZ,MAAMkC,aAAaE,EAAE,SACtCU,IAAnClC,KAAKZ,MAAMkC,aAAaG,QAC1BzB,KAAKJ,SAAS,CAAC0B,aAAc,CAAEG,OAAQ,kBAEzC9B,EAAKwC,OAAO,YAAanC,KAAKZ,MAAMkC,aAAaG,QACjD9B,EAAKwC,OAAO,oBAAqBF,GACjCtC,EAAKwC,OAAO,UAAW,IAAIC,MAC3BzC,EAAKwC,OAAO,OAAQnC,KAAKZ,MAAMiC,WAG/BhD,MAAM,iCAAkC,CACxCgE,OAAQ,OACRC,KAAM3C,IACHnB,MAAK,SAACiB,S,kCAKCU,GACVH,KAAKJ,SAAS,CACZ8B,cAAe,CACbH,EAAGpB,EAAMoC,QACTf,EAAGrB,EAAMqC,a,gCAMbxC,KAAKyC,WACLzC,KAAKJ,SAAS,CAAE8C,SAAS,M,mCAGdC,GACX,GAAW,MAAPA,EAAa,CACf,IAAIC,EAAQD,EAAIE,MAAM,KAEtB,OADAD,EAAM,GAAKA,EAAM,GAAGE,OAAO,GAAGC,cAAgBH,EAAM,GAAGI,MAAM,GACtDJ,EAAM,IACX,IAAK,OACHA,EAAM,GAAK,MACX,MACF,IAAK,MACHA,EAAM,GAAK,QACX,MACF,QACEA,EAAM,GAAK,QAKf,OAFgBA,EAAM,GAAK,KAAOA,EAAM,GAI1C,OAAOK,QAAQC,MAAM,wB,oCAGTC,GAAI,IAAD,OACXC,EAAOC,SAASC,eAAe,YAC/BC,EAAKF,SAASG,cAAc,MAE5BC,EAASN,EAAE/C,OAAOlB,IACtBc,KAAKJ,SAAS,CAACoB,MAAM,GAAD,mBAAMhB,KAAKZ,MAAM4B,OAAjB,CAAwByC,MAAU,eAEtDF,EAAGG,aAAa,KAAMD,GAEtB,IAAIE,EAAU3D,KAAK4D,aAAaT,EAAE/C,OAAOyD,aAAa,OAClDC,EAAc9D,KAAK+D,aAAaJ,GAChCK,EAAgBhE,KAAKiE,cAAcN,EAASP,IAE1B,IAAlBY,IAA2C,IAAhBF,GAC7BP,EAAGW,UAAYP,EAGfJ,EAAGY,iBAAiB,SAAS,WAC3B,EAAKvE,SAAS,CAACqB,OAAQsC,EAAGM,aAAa,QAAQ,eAC/C,EAAKpB,cAEPzC,KAAKJ,SAAS,CAACqB,OAAQwC,IAAS,eAChCzD,KAAKyC,WAELW,EAAKgB,YAAYb,GACjBvD,KAAKJ,SAAS,CACZyE,QAASd,EAAGM,aAAa,QAE3B7D,KAAKsE,oBACsB,IAAlBN,IAA2C,IAAhBF,GACpCS,MAAM,4CACNvE,KAAKsE,oBAELC,MAAM,yCACNvE,KAAKsE,qB,mCAIIX,GACX,YAAgBzB,IAAZyB,IACFV,QAAQuB,IAAI,eACL,K,oCAKGb,EAASP,GAGrB,IAFA,IAAIqB,EAAMrB,EAAKsB,qBAAqB,MAE3B7E,EAAI,EAAGA,EAAI4E,EAAI3E,OAAQD,IAE9B,GAAI4E,EAAI5E,GAAGqE,YAAcP,EACvB,OAAO,EAGX,OAAO,I,iCAGExD,GACiB,OAAtBH,KAAKZ,MAAM6B,SAA0C,IAAvBjB,KAAKZ,MAAMsD,UACf,IAAxB1C,KAAKZ,MAAMgC,UACbpB,KAAK2E,UAAUxE,GACfH,KAAKJ,SAAS,CAACsB,iBAAiB,IAAO,eACvClB,KAAK4E,iBAEL5E,KAAK6E,e,gCAKD1E,GACR,IAAI2E,EAAMzB,SAASG,cAAc,OACjCsB,EAAI5F,IAAMc,KAAKZ,MAAM6B,OACrB6D,EAAIC,UAAUC,IAAI,QAClBF,EAAIpB,aAAa,KAAM1D,KAAKZ,MAAM+B,UAAU8D,YAC5CjF,KAAKJ,SAAS,CACZyB,UAAWrB,KAAKZ,MAAM+B,YAExBnB,KAAKJ,SAAS,CACZuB,UAAWnB,KAAKZ,MAAM+B,UAAY,IAEpCkC,SAASC,eAAe,iBAAiBc,YAAYU,GACrDA,EAAII,MAAMC,IAAQhF,EAAMqC,QAAS,KACjCsC,EAAII,MAAME,KAAQjF,EAAMoC,QAAU,KAClC,IAAIhB,EAAIpB,EAAMoC,QACVf,EAAIrB,EAAMqC,QACdxC,KAAKJ,SAAS,CACZ0B,aAAc,CACZC,EAAGA,EACHC,EAAGA,O,kCAOP,IAKI6D,EAAoB,IALRC,KAAKC,MACjBvF,KAAKZ,MAAMsC,cAAcH,EAAIvB,KAAKZ,MAAMkC,aAAaC,IACnDvB,KAAKZ,MAAMsC,cAAcF,EAAIxB,KAAKZ,MAAMkC,aAAaE,IAG/B8D,KAAKE,GAAK,GAElCC,EAAgB,UADDH,KAAKI,MAAML,GACeJ,WAAY,OAEzDjF,KAAKJ,SAAS,CACZ0B,aAAc,CACZC,EAAGvB,KAAKZ,MAAMkC,aAAaC,EAC3BC,EAAGxB,KAAKZ,MAAMkC,aAAaE,EAC3BC,OAAQgE,KAIZ,IAAIX,EAAMzB,SAASC,eAAetD,KAAKZ,MAAMiC,UAAU4D,YAClC,MAAjBQ,IACFX,EAAII,MAAMS,UAAYF,K,sCAKxBzF,KAAKJ,SAAS,CACZwB,SAAU,M,qCAKZpB,KAAKJ,SAAS,CACZwB,SAAU,IAERpB,KAAKZ,MAAM8B,kBACblB,KAAK4F,oBACL5F,KAAKJ,SAAS,CAACsB,iBAAiB,IAAQ,kB,iCAK1C,IAAIhD,EAAOmF,SAASC,eAAetD,KAAKZ,MAAMiC,UAAU4D,YAC5C,MAAR/G,IACFA,EAAKgH,MAAMW,QAAU,QAEvB7F,KAAK8F,iB,gCAIL9F,KAAK8F,eAEL,IAAK,IAAIjG,EAAE,EAAGA,EAAEG,KAAKZ,MAAM+B,UAAWtB,IAE7BwD,SAASC,eAAezD,EAAEoF,YAC5BC,MAAMW,QAAU,U,gCAKvB7F,KAAK8F,eAEL,IAAK,IAAIjG,EAAE,EAAGA,EAAEG,KAAKZ,MAAM+B,UAAWtB,IAC7BwD,SAASC,eAAezD,EAAEoF,YAC5BC,MAAMW,QAAU,S,wCAKvB7F,KAAKJ,SAAS,CAAE8C,SAAS,M,0CAGN,IAAD,OAClBrE,MAAM,0BAAD,OAA2B2B,KAAKZ,MAAMuC,OAAQnD,MAAK,SAAAuH,GAAG,OAAIA,EAAIrG,UAClElB,MAAK,SAAAmB,GACJ,EAAKC,SAAS,CAACiC,SAAUlC,OAE3BtB,MAAM,eAAD,OAAgB2B,KAAKZ,MAAMuC,OAAQnD,MAAK,SAAAuH,GAAG,OAAIA,EAAIrH,UACrDF,MAAK,SAAAG,GACJ,IAAIC,EAAQC,IAAIC,gBAAgBH,GAChC,EAAKiB,SAAS,CAACkC,QAASlD,S,+BAIpB,IAAD,OACP,OACE,sBAAKG,GAAG,WAAR,UACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAWgB,KAAKZ,MAAMsD,QAAU,UAAY,kBAAjD,UACI,cAAC,EAAD,CAAUjC,WAAcT,KAAKS,aAC7B,wBAAQ1B,GAAG,iBAAiByB,QAAS,kBAAM,EAAK8D,mBAAhD,uBAEA,qBAAIvF,GAAG,WAAP,UACE,oBAAIC,UAAU,WAAWwB,QAAS,kBAAM,EAAKwF,WAA7C,uBACA,oBAAIhH,UAAU,WAAWwB,QAAS,kBAAM,EAAKyF,WAA7C,wBACA,oBAAIjH,UAAU,WAAWwB,QAAS,kBAAM,EAAK0F,WAA7C,8BAIR,qBAAKjH,IAAI,GAAGkH,YAAa,SAAAhD,GAAC,OAAI,EAAKiD,YAAYjD,IAC3C3C,QAAS,SAAA2C,GAAC,OAAI,EAAKkD,WAAWlD,IAC9BnE,UAAU,YACVE,IAAKc,KAAKZ,MAAM0C,UAClB,qBAAK/C,GAAG,yB,GAtRa6B,IAAMC,Y,gCC6KtByF,E,kDA3KX,WAAYtI,GAAQ,IAAD,8BACf,cAAMA,IACDoB,MAAQ,CACTmH,YAAa,GACbC,kBAAmB,eACnBC,mBAAoB,QACpBnI,YAAa,GACboI,UAAU,EACVC,YAAa3I,EAAM4D,SAASxC,MAAMuH,YAClCC,QAAS,UACTjF,KAAM,IAGV,EAAK1B,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK2G,kBAAoB,EAAKA,kBAAkB3G,KAAvB,gBACzB,EAAK4G,YAAc,EAAKA,YAAY5G,KAAjB,gBACnB,EAAK6G,YAAc,EAAKA,YAAY7G,KAAjB,gBACnB,EAAK8G,kBAAoB,EAAKA,kBAAkB9G,KAAvB,gBAjBV,E,yDAoBNC,GAAQ,IAAD,SACMA,EAAMC,OAArB6G,EADS,EACTA,KAAM5G,EADG,EACHA,MACbL,KAAKJ,SAAL,eACKqH,EAAO5G,IAEyB,0BAAjCL,KAAKZ,MAAMoH,mBAAqE,iBAApBrG,EAAMC,OAAOrB,IACzEiB,KAAKJ,SAAS,CAAC4G,kBAAmB,iBAAiB,WAC/C,EAAKU,mB,oCAIF,IAAD,OAC4B,mBAAlClH,KAAKZ,MAAMqH,oBACXzG,KAAKJ,SAAS,CAAC6G,mBAAoB,UAAU,WACzC,EAAKS,mB,oCAMc,YAAvBlH,KAAKZ,MAAMwH,QACX5G,KAAKJ,SAAS,CAAEgH,QAAS,YACe,iBAAjC5G,KAAKZ,MAAMoH,mBAClBxG,KAAKJ,SAAS,CAAEgH,QAAS,c,wCAIfjF,GAAO,IAAD,OACdhC,EAAO,IAAIqC,SACjBrC,EAAKwC,OAAO,OAAQnC,KAAKmH,YAAYC,MAAM,IAC3CzH,EAAKwC,OAAO,OAAQR,GAEpBtD,MAAM,+BAAgC,CACpCgE,OAAQ,OACRC,KAAM3C,IACLnB,KAAK6I,YACJ,kBAAM,EAAKL,sBAAqB,Q,0CAIpChH,KAAKhC,MAAMsJ,QAAQvH,KAAK,CACpBwH,SAAU,WACVnI,MAAO,CACHuC,KAAM3B,KAAKZ,MAAMuC,U,kCAKjBxB,GACRA,EAAMqH,iBACFxH,KAAKZ,MAAMuH,YACoB,KAA3B3G,KAAKZ,MAAMmH,aAAwD,IAAlCvG,KAAKmH,YAAYC,MAAMtH,OACxDE,KAAKyH,kBAE0B,KAA3BzH,KAAKZ,MAAMmH,aACXvG,KAAKJ,SAAS,CAAC4G,kBAAmB,0BAEA,IAAlCxG,KAAKmH,YAAYC,MAAMtH,QACvBE,KAAKJ,SAAS,CAAC6G,mBAAoB,mBAEvCzG,KAAKkH,eAGsB,KAA3BlH,KAAKZ,MAAMmH,YACXvG,KAAKyH,kBAELzH,KAAKJ,SAAS,CAAC4G,kBAAmB,0BAClCxG,KAAKkH,iB,uCAKC,IAAD,OACPvH,EAAO,IAAIqC,SACjBrC,EAAKwC,OAAO,OAAQnC,KAAKZ,MAAMmH,aAC/B5G,EAAKwC,OAAO,cAAenC,KAAKZ,MAAMd,aACtCqB,EAAKwC,OAAO,YAAa,IAAIC,MACzBpC,KAAKZ,MAAMuH,aACXhH,EAAKwC,OAAO,MAAOnC,KAAKmH,YAAYC,MAAM,GAAGH,MAEjD5I,MAAM,aAAc,CACpBgE,OAAQ,OACRC,KAAM3C,IACHnB,MAAK,SAACiB,GACLA,EAASC,OAAOlB,MAAK,SAACmB,GAClB,EAAKC,SAAS,CAAC+B,KAAMhC,EAAKgC,KAAK,KAC3B,EAAKvC,MAAMuH,YACX,EAAKE,kBAAkBlH,EAAKgC,KAAK,IAEjC,EAAK3D,MAAMsJ,QAAQvH,KAAK,CACpBwH,SAAU,eACVnI,MAAO,CACHmH,YAAa,EAAKnH,MAAMmH,YACxBjI,YAAa,EAAKc,MAAMd,YACxBqD,KAAMhC,EAAKgC,KAAK,c,+BAQ9B,IAAD,OACL,OACI,qBAAK5C,GAAG,cAAR,SACI,sBAAKC,UAAYgB,KAAKZ,MAAMuH,YAAc,yBAA2B,kBAArE,UACI,cAAC,IAAD,CAAMe,GAAG,aAAa1I,UAAU,aAAhC,SACI,cAAC,IAAD,MAEJ,sBAAKD,GAAG,mBAAR,UACI,8CAAiBiB,KAAKZ,MAAMuI,gBAC5B,iCACI,iCAAS3H,KAAKZ,MAAMoH,oBACpB,uBACIzH,GAAG,eACH6I,KAAK,OACLX,KAAK,cACL5G,MAAOL,KAAKZ,MAAMmH,YAClBsB,SAAU7H,KAAKC,eAEnB,uBACA,iDACA,0BACIlB,GAAG,cACHkI,KAAK,cACL5G,MAAOL,KAAKZ,MAAMd,YAClBwJ,YAAY,6DACZD,SAAU7H,KAAKC,qBAI3B,uBAAMjB,UAAagB,KAAKZ,MAAMuH,YAAc,kBAAoB,uBAAhE,UACI,iCAAS3G,KAAKZ,MAAMqH,qBACpB,uBACIsB,IAAK,SAACA,GAAU,EAAKZ,YAAcY,GACnCH,KAAK,OACL5I,UAAU,cACV6I,SAAU7H,KAAK+G,iBAGvB,6BACG,oBAAIvG,QAAU,SAAC2C,GACV,EAAK2D,YAAY3D,IAClB+B,MAAO,CAAC8C,gBAAiBhI,KAAKZ,MAAMwH,SAFxC,kC,GAlKEhG,IAAMC,WC6BdoH,MA/BjB,WAAkB,IAAD,EACuBhK,mBAAS,2BADhC,mBACR6J,EADQ,KACKI,EADL,KAqBb,OAjBF9J,qBAAU,WACRC,MAAM,oCAAD,OAHO,UAIXG,MAAK,SAAAuH,GAAG,OAAIA,EAAIrH,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAQC,IAAIC,gBAAgBH,GAChC0E,SAASC,eAAe,SAASpE,IAAMN,OAG3C,IACAR,qBAAU,WACRC,MAAM,uCACLG,MAAK,SAAAuH,GAAG,OAAIA,EAAIrG,UAChBlB,MAAK,SAAAmB,GACJuI,EAAevI,QAGnB,IAEI,sBAAKX,UAAU,QAAf,UACI,cAAC,IAAD,CAAM0I,GAAG,aAAT,SAAsB,qBAAKzI,IAAI,WAAWF,GAAG,YAC5C+I,M,OCuCMK,MAlDjB,WAAqB,MAEkBlK,oBAAS,GAF3B,mBAEZmK,EAFY,KAECC,EAFD,KAIbC,EAAiB,kBAAMD,GAAc,IAJxB,EAOoBpK,oBAAS,GAP7B,mBAOZsK,EAPY,KAOEC,EAPF,KAgBjB,OACE,sBAAKxJ,UAAU,YAAf,UACE,kDACA,qBAAID,GAAG,aAAP,UAEE,oBAAIyB,QAAU,WAZQgI,GAAe,GANXH,GAAeD,IAmBvCpJ,UAAWoJ,EAAc,SAAW,UADtC,yBAIA,oBAAI5H,QAAU,WAAQ8H,IAjBKE,GAAgBD,IAkBzCvJ,UAAWuJ,EAAe,SAAW,UADvC,SAEC,cAAC,IAAD,CAAMb,GAAI,eAAV,4BAED,oBAAIlH,QAAS8H,EAAb,6BAEF,qBAAIvJ,GAAIqJ,EAAc,WAAa,YAAnC,UACE,cAAC,IAAD,CAAMV,GAAI,CACNH,SAAU,cACVnI,MAAO,CACLuH,aAAa,IAHnB,SAKK,+CAEH,cAAC,IAAD,CAAMe,GAAI,CACRH,SAAU,cACVnI,MAAO,CACLuH,aAAa,IAHjB,SAKG,6D,+CC6CA8B,G,yDA7Fb,WAAYzK,GAAQ,IAAD,8BACf,cAAMA,IACDoB,MAAQ,CACXmH,YAAavI,EAAM4D,SAASxC,MAAMmH,YAClCjI,YAAaN,EAAM4D,SAASxC,MAAMd,YAClCqD,KAAM3D,EAAM4D,SAASxC,MAAMuC,MAE7B,EAAKpB,IAAM,IAAImI,IAAI,CACjBtI,OAAQ,KACRuI,OAAQ,CAAC,IAAIC,IAAU,CAACC,OAAQ,IAAIC,OACpCC,KAAM,IAAIC,IAAK,CAACC,OAAQtD,YAAU,CAAC,SAAU,WAAY,YAAa,aAAcuD,KAAM,KAC1FC,SAAU,CAAC,IAAIC,OAEjB,EAAKC,UAAY,EAAKA,UAAUnJ,KAAf,gBACjB,EAAKoJ,oBAAsB,EAAKA,oBAAoBpJ,KAAzB,gBAdZ,E,wDAiBN,IAAD,OACNqJ,EAAYlG,SAASG,cAAc,UACnCgG,EAAOxJ,KAAKO,IAAIkJ,UACpBF,EAAUG,MAAQF,EAAK,GACvBD,EAAUI,OAASH,EAAK,GACxB,IAAII,EAAaL,EAAUM,WAAW,MACtCC,MAAMC,UAAUC,QAAQC,KACtB5G,SAAS6G,iBAAiB,qBAC1B,SAAUC,GACR,GAAIA,EAAOT,MAAQ,EAAG,CACpB,IAAIU,EAAUD,EAAOE,WAAWnF,MAAMkF,QACtCR,EAAWU,YAA0B,KAAZF,EAAiB,EAAIG,OAAOH,GACrD,IACII,EADYL,EAAOjF,MAAMS,UAE1B8E,MAAM,kBAAkB,GACxB5H,MAAM,KACNtC,IAAIgK,QACPG,yBAAyBX,UAAUY,aAAaC,MAC9ChB,EACAY,GACFZ,EAAWiB,UAAUV,EAAQ,EAAG,OAItC9L,MAAMkL,EAAUuB,aACXtM,MAAK,SAAAuH,GAAG,OAAIA,EAAIrH,UAChBF,MAAK,SAAAE,GACJA,EAAKqM,iBAAmB,IAAI3I,KAC5B1D,EAAKuI,KAAO,EAAK7H,MAAMmH,YAAc,OACrC,IAAIyE,EAAO,IAAIC,KAAK,CAACvM,GAAOA,EAAKuI,KAAM,CAAEiE,cAAc,IAAI9I,MAAO+I,UAAWvD,KAAMlJ,EAAKkJ,OAClFjI,EAAO,IAAIqC,SACjBrC,EAAKwC,OAAO,OAAQ6I,GACpBrL,EAAKwC,OAAO,OAAQ,EAAK/C,MAAMuC,MAC/BtD,MAAM,+BAAgC,CACpCgE,OAAQ,OACRC,KAAM3C,IACLnB,KAAK6I,YACN,kBAAM,EAAKiC,wBAAuB,W,4CAK1CtJ,KAAKhC,MAAMsJ,QAAQvH,KAAK,CACtBwH,SAAU,WACVnI,MAAO,CACHuC,KAAM3B,KAAKZ,MAAMuC,U,0CAKJ,IAAD,OAClB3B,KAAKO,IAAI6K,UAAU,oBACnBpL,KAAKO,IAAI8K,GAAG,WAAW,WACrB,IAAIpC,EAAS,EAAK1I,IAAI+K,UAAUC,YAC5BrC,EAAO,EAAK3I,IAAI+K,UAAUE,UAC9B,EAAK5L,SAAS,CAAEqJ,SAAQC,c,+BAKxB,OACE,qBAAKnK,GAAG,eAAR,SACE,sBAAKC,UAAU,mBAAf,UACE,6BAAKgB,KAAKZ,MAAMmH,cAChB,cAAC,IAAD,CAAMmB,GAAG,aAAa1I,UAAU,aAAhC,SACI,cAAC,IAAD,MAEJ,qBAAKD,GAAG,qBACR,wBAAQC,UAAU,sBAAsBwB,QAASR,KAAKqJ,UAAtD,mC,GAtFczI,IAAMC,Y,QCgBf4K,MAzBjB,SAAiBzN,GACf,IAAM0N,EAAe,GACrB,GAAsB,sBAAlB1N,EAAM2N,SACR,IAAK,IAAI9L,EAAI,EAAGA,EAAI7B,EAAM2N,SAAS7L,OAAQD,IACzC6L,EAAa3L,KACX,oBAAIf,UAAU,cAEVwB,QAAS,SAAC2C,GACRnF,EAAM4N,YAAYzI,EAAE/C,OAAO8D,YAHjC,SAKGlG,EAAM2N,SAAS9L,GAAG,IAJZ7B,EAAM2N,SAAS9L,GAAG,KASjC,OACE,qBAAKb,UAAU,YAAf,SACE,6BACG0M,O,OC0DMG,MAxEf,WAAwB,IAAD,EACiB5N,mBAAS,qBAD1B,mBACd6N,EADc,KACDC,EADC,OAEa9N,mBAAS,6BAFtB,mBAEd+N,EAFc,KAEHC,EAFG,OAGWhO,mBAAS,CAAC,GAAM,qBAH3B,mBAGdiO,EAHc,KAGJC,EAHI,OAImBlO,oBAAS,GAJ5B,mBAIdmO,EAJc,KAIAC,EAJA,KA2CrB,OApCAjO,qBAAU,WAER,IACIkO,EAAW,0BADA,GAEfjO,MAAMiO,GAAa9N,MAAK,SAAAuH,GAAG,OAAIA,EAAIrG,UAAQlB,MAAK,SAAAmB,GAC9CoM,EAAepM,QAEhB,IAEHvB,qBAAU,WACR,IAAIkO,EAAW,yBAAqBJ,EAAQ,IAC5C7N,MAAMiO,GAAa9N,MAAK,SAAAuH,GAAG,OAAIA,EAAIrG,UAAQlB,MAAK,SAAAmB,GACtB,YAApBA,EAAI,SACNsM,EAAatM,QAGhB,CAACuM,IAqBE,qBAAKnN,GAAG,eAAR,SACE,sBAAKC,UAAU,mBAAf,UACE,cAAC,IAAD,CAAM0I,GAAG,aAAa1I,UAAU,aAAhC,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CAAY4M,YAxBF,SAACW,GACnB,IAAK,IAAI1M,EAAI,EAAGA,EAAIiM,EAAYhM,OAAQD,IAClCiM,EAAYjM,GAAG,KAAO0M,IACxBF,GAAgB,GAChBF,EAAY,CACV,GAAML,EAAYjM,GAAG,GACrB,KAAQiM,EAAYjM,GAAG,GACvB,YAAeiM,EAAYjM,GAAG,GAC9B,IAAOiM,EAAYjM,GAAG,GACtB,WAAciM,EAAYjM,GAAG,GAC7B,UAAaiM,EAAYjM,GAAG,GAC5B,QAAWiM,EAAYjM,GAAG,GAC1B,KAAQiM,EAAYjM,GAAG,GACvB,KAAQiM,EAAYjM,GAAG,OAWiB8L,SAAUG,IAChD,sBAAK9M,UAAWoN,EAAe,oBAAsB,oBAArD,UACE,+CAAkBF,EAAQ,eAC1B,6CAAgBA,EAAQ,GAAxB,UAAuCA,EAAQ,KAA/C,gBAAsEA,EAAQ,WAA9E,YAAuGF,KACvG,qBAAK/M,IAAK,4BAA6BiN,EAAQ,KAAW,IAAKnN,GAAG,kBAClE,iCACE,cAAC,IAAD,CAAM2I,GAAI,CACFH,SAAU,WACV5H,KAAM,CACF6M,QAASN,EACTO,OAAQ,CAACT,cAEb5M,MAAO,CACLuC,KAAMuK,EAAQ,KAPxB,4CCnBDQ,MA7Bf,WAAgB,IAAD,EACyBzO,mBAAS,4BADlC,mBACN6J,EADM,KACOI,EADP,KASb,OANA9J,qBAAU,WACRC,MAAM,UAAUG,MAAK,SAAAuH,GAAG,OAAIA,EAAIrG,UAAQlB,MAAK,SAAAmB,GAC3CuI,EAAevI,EAAKlB,aAErB,IAGD,sBAAKO,UAAU,MAAf,UACA,wBAAQA,UAAU,aAAlB,SACE,4CAAe8I,OAEf,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6E,KAAK,IAAIC,OAAK,EAACC,UAAW5E,IACjC,cAAC,IAAD,CAAO0E,KAAK,aAAaE,UAAW1E,IACpC,cAAC,IAAD,CAAOwE,KAAK,cAAcE,UAAWvG,IACrC,cAAC,IAAD,CAAOqG,KAAK,eAAeE,UAAWpE,IACtC,cAAC,IAAD,CAAOkE,KAAK,WAAWE,UAAW/L,IAClC,cAAC,IAAD,CAAO6L,KAAK,eAAeE,UAAWhB,a,OC5BhDiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3J,SAASC,eAAe,U","file":"static/js/main.d9518129.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction Icon(props) {\r\n\r\n    const [icon, setIcon] = useState(\"\")\r\n    \r\n    useEffect(() => {\r\n        fetch(`getfigure?description=${props.description}&color=${props.color}`)\r\n        .then(result => result.blob()) \r\n        .then(images => {\r\n            var image = URL.createObjectURL(images)\r\n            setIcon(image)\r\n        })\r\n    },\r\n    [props.description, props.color]); \r\n    \r\n    return (\r\n        <>  \r\n            <img id={props.description + \" \" + props.color} className=\"single-icon\" alt=\"icon\" src={icon}></img>\r\n        </>\r\n    );    \r\n}\r\nexport default Icon","import React from 'react'\r\nimport Icon from './Icon'\r\nimport './AllIcons.css'\r\n\r\nclass AllIcons extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            color: \"blue\",\r\n            icon: \"\",\r\n            allIconData: [],\r\n            redData: [],\r\n            blueData: [],\r\n            greenData: [],\r\n\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(`getfiguredata`)\r\n        .then(response => response.json()) \r\n        .then(data => {\r\n            this.setState({\r\n                allIconData: data\r\n            })\r\n            for (let i=0; i<this.state.allIconData.length; i++){\r\n                if (this.state.allIconData[i].color === \"red\"){\r\n                    this.state.redData.push(this.state.allIconData[i])\r\n                } else if (this.state.allIconData[i].color === \"blue\") {\r\n                    this.state.blueData.push(this.state.allIconData[i])\r\n                } else {\r\n                    this.state.greenData.push(this.state.allIconData[i])\r\n                }\r\n            }            \r\n        })\r\n        this.handleChange = this.handleChange.bind(this)\r\n    };\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            color: event.target.value\r\n        })        \r\n    }\r\n\r\n    render () {\r\n        const redIcons = this.state.redData.map(data => \r\n            \r\n            <div key={data.id} className='single-icon'>\r\n                <div className='single-icon' onClick={this.props.selectIcon}>\r\n                    <Icon \r\n                    description={data.description} \r\n                    color={data.color}/>\r\n                    </div>\r\n                    <div className=\"icon-description\">{data.description}\r\n                </div>\r\n            </div>)\r\n            \r\n        const blueIcons = this.state.blueData.map(data => \r\n            <div key={data.id} className='single-icon'>\r\n                <div className='single-icon' onClick={this.props.selectIcon}>\r\n                    <Icon\r\n                    description={data.description} \r\n                    color={data.color}/>\r\n                    </div>\r\n                    <div className=\"icon-description\">{data.description}\r\n                </div>\r\n            </div>)\r\n\r\n        const greenIcons = this.state.greenData.map(data => \r\n            <div key={data.id} className='single-icon'>\r\n                <div className='single-icon' onClick={this.props.selectIcon}>\r\n                    <Icon \r\n                    description={data.description} \r\n                    color={data.color}/>\r\n                    </div>\r\n                    <div className=\"icon-description\">{data.description}\r\n                </div>\r\n            </div>)\r\n\r\n        return (\r\n            <div className=\"icon-select\">\r\n                <ul className=\"gender-select\">\r\n                    <li onClick={() => {\r\n                        this.setState({color: \"blue\"})}}\r\n                        className={ this.state.color === \"blue\" ? \"selected\" : \"not-selected\" }\r\n                        >Man</li>\r\n                    <li onClick={() => {\r\n                        this.setState({color: \"red\"})}}\r\n                        className={ this.state.color === \"red\" ? \"selected\" : \"not-selected\" }\r\n                        >Woman</li>\r\n                    <li onClick={() => {\r\n                        this.setState({color: \"green\"})}}\r\n                        className={ this.state.color === \"green\" ? \"selected\" : \"not-selected\" }\r\n                        >Child</li>\r\n                </ul>\r\n        \r\n                <div className={this.state.color===\"red\" ? \"icons-visible\" : \"icons-invisible\"}>\r\n                    {redIcons}\r\n                </div>\r\n                    \r\n                <div className={this.state.color===\"blue\" ? \"icons-visible\" : \"icons-invisible\"}>\r\n                    {blueIcons}\r\n                </div>\r\n\r\n                <div className={this.state.color===\"green\" ? \"icons-visible\" : \"icons-invisible\"}>\r\n                    {greenIcons}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AllIcons","import React from 'react';\r\nimport AllIcons from '../components/AllIcons';\r\nimport './BehaviourMapping.css'\r\n\r\nclass BehaviourMapping extends React.Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n\r\n      this.state = {\r\n        background: 'https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png',\r\n        icons: [\r\n        ],\r\n        ourSRC: null,\r\n        sendNewIconToBD: false,\r\n        newIconID: 0,\r\n        actionID: 0,\r\n        ourIconID: 0,\r\n        ourIconCoord: {x: 0, y: 0, degree: 0,},\r\n        ourMouseCoord: {x: 0, y: 0,},\r\n        // Perhaps collect all these into one object at a late time\r\n        p_id: props.location.state.p_id,\r\n        projdata: [],\r\n        mapblob: \"\",\r\n      };\r\n      this.selectIcon = this.addIconToList.bind(this)\r\n  }\r\n\r\n  sendDatabaseEvent() {\r\n    // rettningen, xogykoordinat, tid, icon\r\n    const data = new FormData();\r\n    const coordinates = [this.state.ourIconCoord.x-25, this.state.ourIconCoord.y-25];\r\n    if (this.state.ourIconCoord.degree === undefined) {\r\n      this.setState({ourIconCoord: { degree: \"rotate(0deg)\"}})\r\n    }\r\n    data.append('direction', this.state.ourIconCoord.degree);\r\n    data.append('center_coordinate', coordinates);\r\n    data.append('created', new Date());\r\n    data.append('f_id', this.state.ourIconID);\r\n    // console.log(data);\r\n\r\n    fetch('http://localhost:5000/addevent', {\r\n    method: 'POST',\r\n    body: data,\r\n    }).then((response) => {\r\n      // console.log(response);\r\n    });\r\n  }\r\n\r\n  updateCoord(event) {\r\n    this.setState({\r\n      ourMouseCoord: {\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      }\r\n    });\r\n  }\r\n\r\n  newIcon() {\r\n    this.hideIcon();\r\n    this.setState({ addIcon: true })\r\n  }\r\n\r\n  setInnerHTML(str) {\r\n    if (str != null) {\r\n      let descr = str.split(' ');\r\n      descr[0] = descr[0].charAt(0).toUpperCase() + descr[0].slice(1);\r\n      switch(descr[1]) {\r\n        case 'blue':\r\n          descr[1] = \"Man\";\r\n          break;\r\n        case 'red':\r\n          descr[1] = \"Woman\";\r\n          break;\r\n        default:\r\n          descr[1] = \"Child\";\r\n      }\r\n      // console.log(descr);\r\n      let innerHTML = descr[0] + \": \" + descr[1];\r\n      // console.log(innerHTML);\r\n      return innerHTML; \r\n    }\r\n    return console.error(\"Prøv på Nytt\");\r\n  }\r\n\r\n  addIconToList(e) {\r\n    let list = document.getElementById('iconList');\r\n    let li = document.createElement('li');\r\n\r\n    let newSrc = e.target.src;\r\n    this.setState({icons: [...this.state.icons, newSrc]}, function() {\r\n    });\r\n    li.setAttribute('id', newSrc);\r\n\r\n    let newText = this.setInnerHTML(e.target.getAttribute('id'));    \r\n    let foundObject = this.objectExists(newText);\r\n    let alreadyExists = this.alreadyInList(newText, list)\r\n\r\n    if (alreadyExists === false && foundObject === true) {\r\n      li.innerHTML = newText;\r\n      // vi bytter og skjuler, og sikrer oss at knappene kan gjøre det\r\n      \r\n      li.addEventListener('click', () => {\r\n        this.setState({ourSRC: li.getAttribute('id')}, function() {});\r\n        this.hideIcon()\r\n      });\r\n      this.setState({ourSRC: newSrc}, function() {});\r\n      this.hideIcon()\r\n  \r\n      list.appendChild(li);\r\n      this.setState({\r\n        imgIcon: li.getAttribute('id')\r\n      });\r\n      this.closeIconSelect()\r\n    } else if (alreadyExists === false && foundObject === false) {\r\n      alert('Error Loading from DB, please try again!');\r\n      this.closeIconSelect();\r\n    } else {\r\n      alert('This icon already exists in the list!');\r\n      this.closeIconSelect();\r\n    }\r\n  }\r\n\r\n  objectExists(newText) {\r\n    if (newText === undefined) {\r\n      console.log(\"undefined!\")\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  alreadyInList(newText, list) {\r\n    let ele = list.getElementsByTagName('li')\r\n    // console.log(ele);\r\n    for (let i = 0; i < ele.length; i ++) {\r\n      // console.log(ele[i])\r\n      if (ele[i].innerHTML === newText) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  takeAction(event) {\r\n    if (this.state.ourSRC !== null && this.state.addIcon === false) {\r\n      if (this.state.actionID === 0) {\r\n        this.placeIcon(event);\r\n        this.setState({sendNewIconToBD: true}, function() {});\r\n        this.startPointing();\r\n      } else {\r\n        this.pointIcon();\r\n      }\r\n    }\r\n  }\r\n\r\n  placeIcon(event) {\r\n    var img = document.createElement('img');\r\n    img.src = this.state.ourSRC;\r\n    img.classList.add('icon');\r\n    img.setAttribute('id', this.state.newIconID.toString());\r\n    this.setState({\r\n      ourIconID: this.state.newIconID\r\n    });\r\n    this.setState({\r\n      newIconID: this.state.newIconID + 1\r\n    });\r\n    document.getElementById('iconContainer').appendChild(img);\r\n    img.style.top =  (event.clientY)+'px';\r\n    img.style.left = (event.clientX) +'px';\r\n    var x = event.clientX;\r\n    var y = event.clientY;\r\n    this.setState({\r\n      ourIconCoord: {\r\n        x: x,\r\n        y: y,\r\n      }\r\n    });\r\n  }\r\n\r\n pointIcon() {\r\n    // Finn grad\r\n    var degreerot = Math.atan2(\r\n        this.state.ourMouseCoord.x - this.state.ourIconCoord.x,\r\n        -(this.state.ourMouseCoord.y - this.state.ourIconCoord.y),\r\n    ); // our target is the mouse substracted by iconlocation\r\n    // the second param is the Y dir\r\n    var degrees = degreerot*180/Math.PI - 90;\r\n    var round_degree = Math.round(degrees);\r\n    var string_degree = 'rotate(' + round_degree.toString() +'deg)';\r\n    // this.state.ourIconCoord.degree = string_degree;\r\n    this.setState({\r\n      ourIconCoord: {\r\n        x: this.state.ourIconCoord.x,\r\n        y: this.state.ourIconCoord.y,\r\n        degree: string_degree\r\n      }\r\n    });\r\n    // point icon with css\r\n    var img = document.getElementById(this.state.ourIconID.toString());\r\n    if (string_degree != null) {\r\n      img.style.transform = string_degree;\r\n    }\r\n  }\r\n\r\n  startPointing() {\r\n    this.setState({\r\n      actionID: 1,\r\n    });\r\n  }\r\n\r\n  stopPointing() {\r\n    this.setState({\r\n      actionID: 0,\r\n    });\r\n    if (this.state.sendNewIconToBD) {\r\n      this.sendDatabaseEvent();\r\n      this.setState({sendNewIconToBD: false}, function() {});\r\n    }\r\n  }\r\n\r\n  hideIcon() {\r\n    var icon = document.getElementById(this.state.ourIconID.toString())\r\n    if (icon != null) {\r\n      icon.style.display = 'none';\r\n    }\r\n    this.stopPointing()\r\n  }\r\n\r\n  showAll() {\r\n    this.stopPointing()\r\n    var icon;\r\n    for (var i=0; i<this.state.newIconID; i++) {\r\n      // console.log('id ' + i);\r\n      icon = document.getElementById(i.toString());\r\n      icon.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  hideAll() {\r\n    this.stopPointing()\r\n    var icon;\r\n    for (var i=0; i<this.state.newIconID; i++) {\r\n      icon = document.getElementById(i.toString());\r\n      icon.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  closeIconSelect() {\r\n    this.setState({ addIcon: false});\r\n  }\r\n  \r\n  componentDidMount() {\r\n    fetch(`getprojectmapping?p_id=${this.state.p_id}`).then(res => res.json())\r\n    .then(data => {\r\n      this.setState({projdata: data});\r\n    });\r\n    fetch(`getmap?p_id=${this.state.p_id}`).then(res => res.blob())\r\n      .then(images => {\r\n        let image = URL.createObjectURL(images);\r\n        this.setState({mapblob: image});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='maincont'>\r\n        <div className=\"sidebar\">\r\n          <div className={this.state.addIcon ? \"visible\" : \"icons-invisible\"}>\r\n              <AllIcons selectIcon = {this.selectIcon} />\r\n              <button id=\"exitIconSelect\" onClick={() => this.closeIconSelect()}>Return</button>\r\n            </div>\r\n              <ul id=\"iconList\">\r\n                <li className=\"buttonLi\" onClick={() => this.newIcon()}>Add Event</li>\r\n                <li className=\"buttonLi\" onClick={() => this.showAll()}>Show icons</li>\r\n                <li className=\"buttonLi\" onClick={() => this.hideAll()}>Hide icons</li>\r\n              </ul>\r\n        </div>\r\n        \r\n        <img alt=\"\" onMouseMove={e => this.updateCoord(e)} \r\n            onClick={e => this.takeAction(e)} \r\n            className='map-image' \r\n            src={this.state.mapblob} />\r\n          <div id=\"iconContainer\" />\r\n\r\n      </div>\r\n    );\r\n  }\r\n} // <AllIcons closeIconSelect = {this.closeIconSelect} />\r\n\r\nexport default BehaviourMapping;\r\n","import React from 'react';\r\nimport './newProject.css'\r\nimport { Link } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\nclass NewProject extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectNameLegend: \"Project Name\",\r\n            projectImageLegend: \"Image\",\r\n            description: \"\",\r\n            redirect: false,\r\n            fromLoadMap: props.location.state.fromLoadMap,\r\n            liColor: \"#F3F7F0\",\r\n            p_id: \"\",\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUploadImage = this.handleUploadImage.bind(this);\r\n        this.setRedirect = this.setRedirect.bind(this);\r\n        this.imageChosen = this.imageChosen.bind(this);\r\n        this.redirectToMapping = this.redirectToMapping.bind(this);\r\n    }\r\n\r\n    handleChange(event) { \r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        if (this.state.projectNameLegend === \"Project Name Required\" && event.target.id === \"project-name\") {\r\n            this.setState({projectNameLegend: \"Project Name\"}, () => {\r\n                this.changeColor();\r\n            });   \r\n        }\r\n    }\r\n    imageChosen() {\r\n        if (this.state.projectImageLegend === \"Image Required\") {\r\n            this.setState({projectImageLegend: \"Image\"}, () => {\r\n                this.changeColor();\r\n            }); \r\n        }  \r\n    }\r\n\r\n    changeColor() {\r\n        if (this.state.liColor === \"#F3F7F0\") {\r\n            this.setState({ liColor: \"#FF0000\" })\r\n        } else if (this.state.projectNameLegend === \"Project Name\"){\r\n            this.setState({ liColor: \"#F3F7F0\" })\r\n        }  \r\n    }\r\n\r\n    handleUploadImage(p_id) {\r\n        const data = new FormData();\r\n        data.append('file', this.uploadInput.files[0]);\r\n        data.append('p_id', p_id);\r\n    \r\n        fetch('http://localhost:5000/upload', {\r\n          method: 'POST',\r\n          body: data,\r\n        }).then(setTimeout(\r\n            () => this.redirectToMapping(), 500));\r\n    }\r\n\r\n    redirectToMapping() {\r\n        this.props.history.push({\r\n            pathname: '/mapping',\r\n            state: {\r\n                p_id: this.state.p_id\r\n            },\r\n        })\r\n    }\r\n\r\n    setRedirect(event) {\r\n        event.preventDefault();\r\n        if (this.state.fromLoadMap) {\r\n            if (this.state.projectName !== \"\" && this.uploadInput.files.length !== 0){\r\n                this.handleRedirect();\r\n            } else  {\r\n                if (this.state.projectName === \"\") {\r\n                    this.setState({projectNameLegend: \"Project Name Required\"});\r\n                }\r\n                if (this.uploadInput.files.length === 0) {\r\n                    this.setState({projectImageLegend: \"Image Required\"});\r\n                }\r\n                this.changeColor();\r\n            }\r\n        } else {\r\n            if (this.state.projectName !== \"\"){\r\n                this.handleRedirect();\r\n            } else  {\r\n                this.setState({projectNameLegend: \"Project Name Required\"});\r\n                this.changeColor();\r\n            }\r\n        }\r\n        \r\n    }\r\n    handleRedirect() {\r\n        const data = new FormData();\r\n        data.append('name', this.state.projectName);\r\n        data.append('description', this.state.description);\r\n        data.append('startdate', new Date());\r\n        if (this.state.fromLoadMap){\r\n            data.append('map', this.uploadInput.files[0].name);\r\n        }\r\n        fetch('addproject', {\r\n        method: 'POST',\r\n        body: data,\r\n        }).then((response) => {\r\n            response.json().then((data) => {\r\n                this.setState({p_id: data.p_id[0]});\r\n                if (this.state.fromLoadMap) {\r\n                    this.handleUploadImage(data.p_id[0]);\r\n                } else {\r\n                    this.props.history.push({\r\n                        pathname: '/chooseImage',\r\n                        state: {\r\n                            projectName: this.state.projectName,\r\n                            description: this.state.description,\r\n                            p_id: data.p_id[0],\r\n                        },\r\n                    });\r\n                }  \r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"new-project\">\r\n                <div className={ this.state.fromLoadMap ? 'new-project-box-upload' : 'new-project-box'}>\r\n                    <Link to=\"/startpage\" className=\"close-icon\">\r\n                        <AiIcons.AiOutlineClose />\r\n                    </Link>\r\n                    <div id=\"heading-and-form\">\r\n                        <h2>New Project {this.state.fromLoadMpap}</h2>\r\n                        <form>\r\n                            <legend>{this.state.projectNameLegend}</legend> \r\n                            <input \r\n                                id=\"project-name\"\r\n                                type=\"text\" \r\n                                name=\"projectName\" \r\n                                value={this.state.projectName}\r\n                                onChange={this.handleChange} \r\n                            /> \r\n                            <br/>\r\n                            <legend>Description</legend>\r\n                            <textarea \r\n                                id=\"description\"\r\n                                name=\"description\" \r\n                                value={this.state.description} \r\n                                placeholder=\"E.g. time of day, wheather conditions, special events etc.\" \r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                    <form className= { this.state.fromLoadMap ? 'file-management' : 'hide-file-management'}>\r\n                        <legend>{this.state.projectImageLegend}</legend>\r\n                        <input \r\n                            ref={(ref) => { this.uploadInput = ref; }} \r\n                            type=\"file\"  \r\n                            className='file-button' \r\n                            onChange={this.imageChosen}\r\n                        />\r\n                    </form>\r\n                    <ul>\r\n                       <li onClick={ (e) => {\r\n                            this.setRedirect(e);     \r\n                        }} style={{backgroundColor: this.state.liColor}}>Let's go!</li>\r\n                    </ul>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NewProject","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [placeholder, setPlaceholder] = useState('Prosjektet finnes ikke.')\r\n  const color = 'green'\r\n\r\n  useEffect(() => {\r\n    fetch(`getfigure?description=bike&color=${color}`)\r\n    .then(res => res.blob())\r\n    .then(images => {\r\n      var image = URL.createObjectURL(images)\r\n      document.getElementById(\"figur\").src = image\r\n      }); \r\n    },\r\n  []);\r\n  useEffect(() => {\r\n    fetch('getproject?u_id=1&name=prosjektnamn')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setPlaceholder(data)\r\n      });\r\n    },\r\n  []);\r\n    return (\r\n      <div className=\"login\">\r\n          <Link to=\"/startpage\"><img alt=\"en figur\" id=\"figur\" /></Link>\r\n          {placeholder}\r\n      </div>\r\n    );\r\n\r\n    \r\n  }\r\n  \r\n  export default Login;\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-sequences */\r\nimport React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './startpage.css';\r\n\r\n\r\n// function change_visibility() {\r\n//   if (new_project) {\r\n//     new_project = false\r\n//   }\r\n//   else {\r\n//     new_project = true\r\n//   }\r\n// }\r\n\r\nfunction Startpage() {\r\n  // State for new_project\r\n  const [new_project, setNewProject] = useState(false) // set state for new_project to false\r\n  const changeNewVisibility = () => setNewProject(!new_project) // change state for new procject (true/false)\r\n  const hideNewProject = () => setNewProject(false) // set state to false\r\n\r\n  // State for load_project\r\n  const [load_project, setLoadProject] = useState(false)\r\n  const changeLoadVisibility = () => setLoadProject(!load_project) \r\n  const hideLoadProject = () => setLoadProject(false) \r\n\r\n  // State for User Profile\r\n  // const [user_profile, setUserProfile] = useState(false)\r\n  // const changeUserVisibility = () => setUserProfile(!user_profile) \r\n  // const hideUserProfile = () => setUserProfile(false) \r\n\r\n    return (\r\n      <div className=\"startpage\">\r\n        <h1>Behaviour Mapper</h1>\r\n        <ul id='start-menu'>\r\n          {/* NEW PROJECT */}\r\n          <li onClick={ () => { hideLoadProject(), changeNewVisibility() }}\r\n            className={new_project ? 'active' : 'passive'}\r\n            >New Project</li>\r\n          {/* LOAD PROJECT */}\r\n          <li onClick={ () => { hideNewProject(), changeLoadVisibility() }}\r\n            className={load_project ? 'active' : 'passive'}\r\n          ><Link to={\"/loadproject\"}>Load Project</Link></li>\r\n          {/* USER PROFILE */}\r\n          <li onClick={hideNewProject}>User Profile</li>\r\n        </ul>\r\n        <ul id={new_project ? 'load-map' : 'invisible'}>\r\n          <Link to={{\r\n              pathname: \"/newproject\",\r\n              state: {\r\n                fromLoadMap: false\r\n            }\r\n            }}><li>Use Web-map</li></Link>\r\n            {/* <li>Use Template??</li> */}\r\n            <Link to={{\r\n              pathname: \"/newproject\",\r\n              state: {\r\n                fromLoadMap: true\r\n            }\r\n            }}><li>Load Map From File</li></Link>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Startpage;","import React from 'react';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport Zoom from 'ol/control/Zoom';\r\nimport { transform } from 'ol/proj'\r\nimport { Link } from 'react-router-dom';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport './ChooseImage.css'\r\n\r\nclass ChooseImage extends React.Component {\r\n  constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        projectName: props.location.state.projectName,\r\n        description: props.location.state.description,\r\n        p_id: props.location.state.p_id,\r\n      }\r\n      this.map = new Map({\r\n        target: null,\r\n        layers: [new TileLayer({source: new OSM()})],\r\n        view: new View({center: transform([5.733107, 58.969975], 'EPSG:4326', 'EPSG:3857'), zoom: 12}),\r\n        controls: [new Zoom()]\r\n      });\r\n      this.exportImg = this.exportImg.bind(this);\r\n      this.pauseBeforeRedirect = this.pauseBeforeRedirect.bind(this);\r\n  }\r\n\r\n  exportImg() {\r\n    var mapCanvas = document.createElement('canvas');\r\n    var size = this.map.getSize();\r\n    mapCanvas.width = size[0];\r\n    mapCanvas.height = size[1];\r\n    var mapContext = mapCanvas.getContext('2d');\r\n    Array.prototype.forEach.call(\r\n      document.querySelectorAll('.ol-layer canvas'),\r\n      function (canvas) {\r\n        if (canvas.width > 0) {\r\n          var opacity = canvas.parentNode.style.opacity;\r\n          mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\r\n          var transform = canvas.style.transform;\r\n          var matrix = transform\r\n            .match(/^matrix([^]*)$/)[1]\r\n            .split(',')\r\n            .map(Number);\r\n          CanvasRenderingContext2D.prototype.setTransform.apply(\r\n            mapContext,\r\n            matrix,);\r\n          mapContext.drawImage(canvas, 0, 0);\r\n        }\r\n      }\r\n    );\r\n    fetch(mapCanvas.toDataURL())\r\n        .then(res => res.blob())\r\n        .then(blob => {\r\n          blob.lastModifiedDate = new Date();\r\n          blob.name = this.state.projectName + \".png\";\r\n          var file = new File([blob], blob.name, { lastModified: new Date().getTime(), type: blob.type })\r\n          const data = new FormData();\r\n          data.append('file', file);\r\n          data.append('p_id', this.state.p_id)\r\n          fetch('http://localhost:5000/upload', {\r\n            method: 'POST',\r\n            body: data,\r\n          }).then(setTimeout(\r\n            () => this.pauseBeforeRedirect(), 500));\r\n      }); \r\n  }\r\n\r\n  pauseBeforeRedirect() {\r\n    this.props.history.push({\r\n      pathname: '/mapping',\r\n      state: {\r\n          p_id: this.state.p_id\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map.setTarget(\"choose-image-map\");\r\n    this.map.on(\"moveend\", () => {\r\n      let center = this.map.getView().getCenter();\r\n      let zoom = this.map.getView().getZoom();\r\n      this.setState({ center, zoom });\r\n    });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div id=\"choose-image\">\r\n          <div className=\"choose-image-box\">\r\n            <h1>{this.state.projectName}</h1>\r\n            <Link to=\"/startpage\" className=\"close-icon\">\r\n                <AiIcons.AiOutlineClose />\r\n            </Link>\r\n            <div id=\"choose-image-map\"/>\r\n            <button className=\"choose-image-button\" onClick={this.exportImg}>Choose image</button>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default ChooseImage","import React from 'react';\r\n\r\nfunction sidebar(props) {\r\n  const listElements = [];\r\n  if (props.projects!== \"No projects found\") {\r\n    for (var i = 0; i < props.projects.length; i++) {\r\n      listElements.push(\r\n        <li className=\"projectName\" \r\n            key={props.projects[i][0]} \r\n            onClick={(e) => {\r\n              props.getCurrProj(e.target.innerHTML);\r\n            }}>\r\n          {props.projects[i][1]}\r\n        </li>\r\n      )\r\n    }\r\n  }  \r\n  return (\r\n    <div className=\"sidebarLP\">\r\n      <ul>\r\n        {listElements}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n  export default sidebar;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SidebarLP from '../components/sidebarLP';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport './loadProject.css'\r\n\r\nfunction LoadProject() {\r\n  const [allProjects, setAllProjects] = useState('No projects found');\r\n  const [allEvents, setallEvents] = useState('No event for this project')\r\n  const [currProj, setCurrProj] = useState({\"id\": 99999999999999999n});\r\n  const [showProjInfo, setshowProjInfo] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    // get userID from loggedonuser\r\n    const userID = 1;\r\n    var fetchstring = `getproject?u_id=${userID}`\r\n    fetch(fetchstring).then(res => res.json()).then(data => {\r\n      setAllProjects(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var fetchstring = `getevents?p_id=${currProj['id']}`\r\n    fetch(fetchstring).then(res => res.json()).then(data => {\r\n      if (data[\"message\"] !== \"Bad arg\") {\r\n        setallEvents(data);\r\n      }\r\n    });\r\n  }, [currProj]);\r\n\r\n  const getCurrProj = (index) => {\r\n    for (var i = 0; i < allProjects.length; i++) {\r\n      if (allProjects[i][1] === index) {\r\n        setshowProjInfo(true);\r\n        setCurrProj({\r\n          \"id\": allProjects[i][0], \r\n          \"name\": allProjects[i][1],\r\n          \"description\": allProjects[i][2],\r\n          \"map\": allProjects[i][3],\r\n          \"screenshot\": allProjects[i][4],\r\n          \"startdate\": allProjects[i][5],\r\n          \"enddate\": allProjects[i][6],\r\n          \"zoom\": allProjects[i][7],\r\n          \"u_id\": allProjects[i][8]});      \r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n        <div id=\"load-project\">\r\n          <div className=\"load-project-box\">\r\n            <Link to=\"/startpage\" className=\"close-icon\">\r\n              <AiIcons.AiOutlineClose />\r\n            </Link>\r\n            <SidebarLP  getCurrProj={getCurrProj} projects={allProjects} />\r\n            <div className={showProjInfo ? \"show-project-list\" : \"hide-project-list\"}>\r\n              <h1>Description: {currProj[\"description\"]}</h1>\r\n              <p>Project id: {currProj[\"id\"]} Name: {currProj[\"name\"]} Screenshot: {currProj[\"screenshot\"]} Events: {allEvents}</p>\r\n              <img alt={'Screenshot av kartet til '+ currProj[\"name\"] + '.'} id='opplastetKart' />\r\n              <button>\r\n                <Link to={{\r\n                        pathname: \"/mapping\",\r\n                        data: {\r\n                            project: currProj,\r\n                            events: {allEvents},\r\n                          },\r\n                        state: {\r\n                          p_id: currProj['id'],\r\n                        },\r\n                        }}>Choose this project\r\n                </Link>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\nexport default LoadProject","import './App.css';\r\nimport BehaviourMapping from './pages/BehaviourMapping'\r\nimport NewProject from './pages/newProject'\r\nimport Login from './pages/login'\r\nimport Startpage from './pages/startpage'\r\nimport ChooseImage from './pages/ChooseImage'\r\n// import UploadMap from './pages/UploadMap'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport LoadProject from './pages/loadProject';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [placeholder, setPlaceholder] = useState('Flask server not running');\r\n\r\n  useEffect(() => {\r\n    fetch('/hello').then(res => res.json()).then(data => {\r\n      setPlaceholder(data.result);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <p>Flask says {placeholder}</p>\r\n    </header>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={Login} />\r\n          <Route path='/startpage' component={Startpage} />\r\n          <Route path='/newproject' component={NewProject} />\r\n          <Route path='/chooseImage' component={ChooseImage} />\r\n          <Route path='/mapping' component={BehaviourMapping} />\r\n          <Route path='/loadproject' component={LoadProject} />\r\n          {/* <Route path='/upload' component={UploadMap} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}